version: "3.7"

services:
  mongo:
    container_name: ${CONTAINER_NAME_MONGO} 
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME} 
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD} 
    volumes:
      - ../.docker/mongodb:/data/db
    ports:
      - ${PORT_MONGO}:${PORT_MONGO}
    networks:
      box_universe:
        ipv4_address: ${CONTAINER_MONGO_IP}
  node-server:
    container_name: ${CONTAINER_NAME_SERVER}
    restart: always
    build:
      context: ../
      dockerfile: ./server/docker/Dockerfile.prod 
    environment:
      SECRET: ${SECRET}
      PORT: ${PORT_SERVER}
      SALT: ${SALT}
      TIME_EXPIRE_ACCESS_TOKEN: ${TIME_EXPIRE_ACCESS_TOKEN}
      TIME_EXPIRE_REFRESH_TOKEN: ${TIME_EXPIRE_REFRESH_TOKEN}
      MONGO_URL: ${MONGO_URL}
      NODE_ENV: production
    ports:
      - ${PORT_SERVER}:${PORT_SERVER}
    volumes:
      - ../server/dist/:/server/dist # production
    networks:
      box_universe:
        ipv4_address: ${CONTAINER_SERVER_IP}
    depends_on:
      - mongo
  node-client:
    container_name: ${CONTAINER_NAME_CLIENT}
    restart: always
    build:
      context: ../
      dockerfile: ./client/docker/Dockerfile.prod # production
    ports:
      - ${PORT_CLIENT}:${PORT_CLIENT}
    volumes:
      - ../client/.next/:/client/.next # production
    environment: 
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      SECRET: ${SECRET}
      NEXTAUTH_SECRET: ${SECRET}
      NODE_ENV: production
    networks:
      box_universe:
        ipv4_address: ${CONTAINER_CLIENT_IP} 
    depends_on:
      - node-server 
networks:
  box_universe:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${CONTAINER_SUBNET} 
